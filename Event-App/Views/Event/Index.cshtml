@model IEnumerable<Event_App.Models.EventViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<<<<<<< HEAD
<div class="row">
    <div class="col-md-6">
        <form asp-action="Index" method="get">
            <div class="form-actions no-color" style="" >
                <p>
                    Find Event: <input type="text" style="width: 50%" name="SearchString" value="@ViewData["CurrentFilter"]" />
                    <input type="submit" value="Search" class="btn btn-secondary"  />
                    @*<a asp-action="Index">New Search</a>*@
                </p>
                @* Add drop down here! *@
                @*<select asp-for="Intrests" class="form-control" asp-items='new SelectList(Model.Intrests, "Id", "Intrests")'></select>*@
            </div>
        </form>
        @foreach (var item in Model)
        {
            @foreach (var eventCard in item.Events)
            {
                <div class="card-body bg-light w-88 box">
                    <div class="row">
                        <div class="col-5">
                            <div>


                                <p class="">
                                    @eventCard.EventDate.Value.ToString("MMMM dd")<br />
                                    @eventCard.EventDate.Value.ToString("dddd h:mm tt")
                                </p>



                            </div>
                        </div>
                        <div class="col-7">
                            <div>

                                <p class="card-text font-weight-bold">@Html.DisplayFor(modelItem => eventCard.Interest.InterestType)</p>
                                <h5 class="card-header-pills">
                                    <a asp-action="Details" asp-route-id="@eventCard.EventId">
                                        &nbsp;@Html.DisplayFor(modelItem => eventCard.EventName)
                                    </a>
                                </h5>



                                @if (eventCard.IsVirtual == false)
                                {
                                    <p class="card-text">
                                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-geo-alt-fill eventIcon"   xmlns="http://www.w3.org/2000/svg">
                                            <path fill-rule="evenodd" d="M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" />
                                        </svg>

                                        @Html.DisplayFor(modelItem => eventCard.Address.Venue)


                                    </p>
                                }
                                @if (eventCard.IsVirtual == true && eventCard.IsPrivate == false) //if virtual public
                                {
                                    <p class="card-text">
                                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-globe2 eventIcon"  xmlns="http://www.w3.org/2000/svg">
                                            <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855-.143.268-.276.56-.395.872.705.157 1.472.257 2.282.287V1.077zM4.249 3.539a8.372 8.372 0 0 1-1.198-.49 7.01 7.01 0 0 1 2.276-1.52 6.7 6.7 0 0 0-.597.932 8.854 8.854 0 0 0-.48 1.079zM3.509 7.5H1.017A6.964 6.964 0 0 1 2.38 3.825c.47.258.995.482 1.565.667A13.4 13.4 0 0 0 3.508 7.5zm1.4-2.741c.808.187 1.681.301 2.591.332V7.5H4.51c.035-.987.176-1.914.399-2.741zM8.5 5.09V7.5h2.99a12.342 12.342 0 0 0-.399-2.741c-.808.187-1.681.301-2.591.332zM4.51 8.5H7.5v2.409c-.91.03-1.783.145-2.591.332a12.343 12.343 0 0 1-.4-2.741zm3.99 0v2.409c.91.03 1.783.145 2.591.332.223-.827.364-1.754.4-2.741H8.5zm-3.282 3.696A12.63 12.63 0 0 1 7.5 11.91v3.014c-.67-.204-1.335-.82-1.887-1.855a7.776 7.776 0 0 1-.395-.872zm.11 2.276a6.696 6.696 0 0 1-.598-.933 8.853 8.853 0 0 1-.481-1.079 8.38 8.38 0 0 0-1.198.49 7.01 7.01 0 0 0 2.276 1.522zm-1.383-2.964a9.083 9.083 0 0 0-1.565.667A6.963 6.963 0 0 1 1.018 8.5h2.49a13.36 13.36 0 0 0 .437 3.008zm6.728 2.964a7.009 7.009 0 0 0 2.275-1.521 8.376 8.376 0 0 0-1.197-.49 8.853 8.853 0 0 1-.481 1.078 6.688 6.688 0 0 1-.597.933zM8.5 11.909c.81.03 1.577.13 2.282.287-.12.312-.252.604-.395.872-.552 1.035-1.218 1.65-1.887 1.855V11.91zm3.555-.401c.57.185 1.095.409 1.565.667A6.963 6.963 0 0 0 14.982 8.5h-2.49a13.36 13.36 0 0 1-.437 3.008zM14.982 7.5h-2.49a13.361 13.361 0 0 0-.437-3.008 9.123 9.123 0 0 0 1.565-.667A6.963 6.963 0 0 1 14.982 7.5zM11.27 2.461c.177.334.339.694.482 1.078a8.368 8.368 0 0 0 1.196-.49 7.01 7.01 0 0 0-2.275-1.52c.218.283.418.597.597.932zm-.488 1.343c-.705.157-1.473.257-2.282.287V1.077c.67.204 1.335.82 1.887 1.855.143.268.276.56.395.872z" />
                                        </svg>
                                        @Html.DisplayFor(modelItem => eventCard.Address.Venue)
                                    </p>
                                }
                                @if (eventCard.IsPrivate == true)
                                {
                                    <p class="card-text">
                                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-envelope-fill eventIcon"  xmlns="http://www.w3.org/2000/svg">
                                            <path fill-rule="evenodd" d="M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555zM0 4.697v7.104l5.803-3.558L0 4.697zM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757zm3.436-.586L16 11.801V4.697l-5.803 3.546z" />
                                        </svg>
                                        @Html.DisplayFor(modelItem => eventCard.Address.Venue)
                                    </p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }

        }

    </div>


    <div class="col-md-6">
        @* Make the maps responsive later *@

        <p>
            <a asp-action="Create" class="btn btn-primary" style="float: right; margin-bottom: 10px;">Host an Event</a>
        </p>
        
        <div class="box" id="map" style="height: 500px; width: 100%;">
            <script>


                let map;

                function initMap() {

                    const map = new google.maps.Map(document.getElementById("map"), {
                        center: { lat: 43.039172, lng: -87.899492 },
                        zoom: 12,


                    });

                    //create a foreach loop to add mutiple markers to the map with lables
                    // https://developers.google.com/maps/documentation/javascript/examples

                    @foreach (var item in Model)
                    {
                        foreach (Event eventItem in item.Events)
                        {
                            @if (eventItem.Address.Latitude != default)
                            {
                                <text>
                                var marker = new google.maps.Marker({
                                position: {
                                        lat: @eventItem.Address.Latitude,
                                        lng: @eventItem.Address.Longitude},
                                        map: map,
                                    });
                                </text>
                            }
                        }
                    }
=======

<div class="container">
    <div class="col-12">
        <div class="row">
            
                <div class="col-9">
                    <form asp-action="Index" method="get">
                        <div class="form-actions no-color" style="">

                            Find Event: <input type="text" style="width: 50%" name="SearchString" value="@ViewData["CurrentFilter"]" />
                            <input type="submit" value="Search" class="btn btn-secondary" />
                            @*<a asp-action="Index">New Search</a>*@

                            
                        </div>
                    </form>
                </div>
               
                <div class="col-3">
                    <p>
                        <a asp-action="Create" class="btn btn-primary" style="float: right; margin-bottom: 10px;">Host an Event</a>
                    </p>
                </div>
            
        </div>

        <div class="row">
            <div class="col-md-6">

                @foreach (var item in Model)
                {
                    @foreach (var eventCard in item.Events)
                    {
                        <div class="card-body bg-light w-88 box">
                            <div class="row">
                                <div class="col-5">
                                    <div>


                                        <p class="">
                                            @eventCard.EventDate.Value.ToString("MMMM dd")<br />
                                            @eventCard.EventDate.Value.ToString("dddd h:mm tt")
                                        </p>



                                    </div>
                                </div>
                                <div class="col-7">
                                    <div>

                                        <p class="card-text font-weight-bold">@Html.DisplayFor(modelItem => eventCard.Interest.InterestType)</p>
                                        <h5 class="card-header-pills">
                                            <a asp-action="Details" asp-route-id="@eventCard.EventId">
                                                &nbsp;@Html.DisplayFor(modelItem => eventCard.EventName)
                                            </a>
                                        </h5>



                                        @if (eventCard.IsVirtual == false)
                                        {
                                            <p class="card-text">
                                                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-geo-alt-fill eventIcon" xmlns="http://www.w3.org/2000/svg">
                                                    <path fill-rule="evenodd" d="M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10zm0-7a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" />
                                                </svg>

                                                @Html.DisplayFor(modelItem => eventCard.Address.Venue)


                                            </p>
                                        }
                                        @if (eventCard.IsVirtual == true && eventCard.IsPrivate == false) //if virtual public
                                        {
                                            <p class="card-text">
                                                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-globe2 eventIcon" xmlns="http://www.w3.org/2000/svg">
                                                    <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855-.143.268-.276.56-.395.872.705.157 1.472.257 2.282.287V1.077zM4.249 3.539a8.372 8.372 0 0 1-1.198-.49 7.01 7.01 0 0 1 2.276-1.52 6.7 6.7 0 0 0-.597.932 8.854 8.854 0 0 0-.48 1.079zM3.509 7.5H1.017A6.964 6.964 0 0 1 2.38 3.825c.47.258.995.482 1.565.667A13.4 13.4 0 0 0 3.508 7.5zm1.4-2.741c.808.187 1.681.301 2.591.332V7.5H4.51c.035-.987.176-1.914.399-2.741zM8.5 5.09V7.5h2.99a12.342 12.342 0 0 0-.399-2.741c-.808.187-1.681.301-2.591.332zM4.51 8.5H7.5v2.409c-.91.03-1.783.145-2.591.332a12.343 12.343 0 0 1-.4-2.741zm3.99 0v2.409c.91.03 1.783.145 2.591.332.223-.827.364-1.754.4-2.741H8.5zm-3.282 3.696A12.63 12.63 0 0 1 7.5 11.91v3.014c-.67-.204-1.335-.82-1.887-1.855a7.776 7.776 0 0 1-.395-.872zm.11 2.276a6.696 6.696 0 0 1-.598-.933 8.853 8.853 0 0 1-.481-1.079 8.38 8.38 0 0 0-1.198.49 7.01 7.01 0 0 0 2.276 1.522zm-1.383-2.964a9.083 9.083 0 0 0-1.565.667A6.963 6.963 0 0 1 1.018 8.5h2.49a13.36 13.36 0 0 0 .437 3.008zm6.728 2.964a7.009 7.009 0 0 0 2.275-1.521 8.376 8.376 0 0 0-1.197-.49 8.853 8.853 0 0 1-.481 1.078 6.688 6.688 0 0 1-.597.933zM8.5 11.909c.81.03 1.577.13 2.282.287-.12.312-.252.604-.395.872-.552 1.035-1.218 1.65-1.887 1.855V11.91zm3.555-.401c.57.185 1.095.409 1.565.667A6.963 6.963 0 0 0 14.982 8.5h-2.49a13.36 13.36 0 0 1-.437 3.008zM14.982 7.5h-2.49a13.361 13.361 0 0 0-.437-3.008 9.123 9.123 0 0 0 1.565-.667A6.963 6.963 0 0 1 14.982 7.5zM11.27 2.461c.177.334.339.694.482 1.078a8.368 8.368 0 0 0 1.196-.49 7.01 7.01 0 0 0-2.275-1.52c.218.283.418.597.597.932zm-.488 1.343c-.705.157-1.473.257-2.282.287V1.077c.67.204 1.335.82 1.887 1.855.143.268.276.56.395.872z" />
                                                </svg>
                                                @Html.DisplayFor(modelItem => eventCard.Address.Venue)
                                            </p>
                                        }
                                        @if (eventCard.IsPrivate == true)
                                        {
                                            <p class="card-text">
                                                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-envelope-fill eventIcon" xmlns="http://www.w3.org/2000/svg">
                                                    <path fill-rule="evenodd" d="M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555zM0 4.697v7.104l5.803-3.558L0 4.697zM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757zm3.436-.586L16 11.801V4.697l-5.803 3.546z" />
                                                </svg>
                                                @Html.DisplayFor(modelItem => eventCard.Address.Venue)
                                            </p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

>>>>>>> fad72cdc984c1088cc345200ef4678ab33a120d5
                }

            </div>


            <div class="col-md-6">
                @* Make the maps responsive later *@


                <div class="box" id="map" style="height: 500px; width: 100%;">
                    <script>


                        let map;

                        function initMap() {

                            const map = new google.maps.Map(document.getElementById("map"), {
                                center: { lat: 43.039172, lng: -87.899492 },
                                zoom: 12,


                            });

                            //create a foreach loop to add mutiple markers to the map with lables
                            // https://developers.google.com/maps/documentation/javascript/examples

                            @foreach (var item in Model)
                            {
                                foreach (Event eventItem in item.Events)
                                {
                                    @if (eventItem.Address.Latitude != default)
                                    {
                                        <text>
                                        var marker = new google.maps.Marker({
                                        position: {
                                                lat: @eventItem.Address.Latitude,
                                                lng: @eventItem.Address.Longitude},
                                                map: map,
                                            });
                                        </text>
                                    }
                                }
                            }
                        }
                    </script>

                    <script src="https://maps.googleapis.com/maps/api/js?key=@ViewData["APIkey"]&callback=initMap"
                            async defer></script>
                </div>
            </div>

        </div>
    </div>
</div>